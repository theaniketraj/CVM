# name: Automate Versioning

# on:
#   push:
#     branches: [ main ]

# jobs:
#   versioning:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4
#         with:
#           persist-credentials: false

#       - name: Set up Git
#         run: |
#           git config --global user.name "github-actions[bot]"
#           git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # git remote set-url origin https://theaniketraj:{{ secrets.GH_PAT }}@github.com/theaniketraj/CVM.git
#           git remote -v

#       - name: Set up Java & Gradle
#         uses: actions/setup-java@v3
#         with:
#           distribution: 'temurin'
#           java-version: '17'

#       - name: Grant Execute Permission to Gradlew
#         run: chmod +x ./gradlew

#       - name: Run Increment Version Task
#         run: ./gradlew incrementVersion

#       - name: Commit & Push Version Update
#         run: |
#           git add version.properties
#           git commit -m "🔄 Auto-increment version [skip ci]" || echo "Nothing to commit"
#           git stash --include-untracked
#           git pull --rebase origin main
#           git stash pop || echo "No stashed changes to apply"
#           git push origin main

name: 🔥 Automated Versioning

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: 🛠️ Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all tags are fetched

      - name: Create Gradle cache directory
        run: mkdir -p ~/.gradle/caches
        
      - name: 🔧 Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # - name: 🛠️ Make `incrementVersion.kts` Executable
        # run: chmod +x scripts/incrementVersion.kts

      # - name: 🔥 Run Version Increment Script
        # run: kotlin -script scripts/incrementVersion.kts

      - name: 🚀 Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions Bot"

      - name: 📌 Tag and Push Version
        run: |
          NEW_TAG=$(grep 'VERSION_MAJOR' version.properties | cut -d'=' -f2).$(grep 'VERSION_MINOR' version.properties | cut -d'=' -f2).$(grep 'VERSION_PATCH' version.properties | cut -d'=' -f2)
          echo "New tag: v$NEW_TAG"
          git add version.properties
          if ! git diff --cached --quiet; then
              git commit -m "🔄 Auto-increment version to $NEW_TAG"
          else
              echo "No changes to commit."
          fi
          # Create tag, ignoring errors if tag already exists
          git tag "v$NEW_TAG" || echo "Tag v$NEW_TAG already exists."
          # Push commits and tags, ignoring errors if there's nothing new to push
          git push origin main --tags || echo "Nothing to push."

